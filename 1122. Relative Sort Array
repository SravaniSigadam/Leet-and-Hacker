# Given two arrays arr1 and arr2, the elements of arr2 are distinct, and all elements in arr2 are also in arr1.
# Sort the elements of arr1 such that the relative ordering of items in arr1 are the same as in arr2. 
#Elements that do not appear in arr2 should be placed at the end of arr1 in ascending order.


# Input: arr1 = [2,3,1,3,2,4,6,7,9,2,19], arr2 = [2,1,4,3,9,6] Output: [2,2,2,1,4,3,3,9,6,7,19]

# Solution 1
class Solution:
    def relativeSortArray(self, arr1: List[int], arr2: List[int]) -> List[int]:
        newarr = []
        arr1 = sorted(arr1)
        for num in arr2:
            if num in arr1:
                newarr.append(num)
                arr1.remove(num)   
        for number in arr1:
            if number in newarr:
                newarr.insert(newarr.index(number),number)
            else:
                newarr.append(number)
        return newarr
        
        
#Solution 2:
class Solution:
    def relativeSortArray(self, arr1, arr2):
        dict={}
        nums,ans = [], []
        
        for val in arr2:
            dict[val] = 0
        
        for val in arr1:
            if val not in dict:
                nums.append(val)
            else: 
                dict[val] += 1
                
        for key, val in dict.items():
            ans.extend([key for _ in range(val)])
        
        ans.extend(sorted(nums))
        return ans
