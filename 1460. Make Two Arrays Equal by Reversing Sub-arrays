# Given two integer arrays of equal length target and arr.

# In one step, you can select any non-empty sub-array of arr and reverse it. You are allowed to make any number of steps.

# Return True if you can make arr equal to target, or False otherwise.

# Input: target = [1,2,3,4], arr = [2,4,1,3] Output: true

class Solution:
    def canBeEqual(self, target: List[int], arr: List[int]) -> bool:
        return sorted(arr) == sorted(target)

class Solution:
    def canBeEqual(self, target: List[int], arr: List[int]) -> bool:
        from collections import Counter
        c1 = Counter(arr)
        c2 = Counter(target)
        
        return c1 == c2
