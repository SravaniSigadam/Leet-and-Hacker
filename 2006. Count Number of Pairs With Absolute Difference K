# Given an integer array nums and an integer k, return the number of pairs (i, j) where i < j such that |nums[i] - nums[j]| == k.

# Input: nums = [1,2,2,1], k = 1 Output: 4

# Solution 1

class Solution:
    def countKDifference(self, nums: List[int], k: int) -> int:
        count = 0
        for i in range(len(nums)-1):
            j = 0
            for j in range(i+1,len(nums)):
                if abs(nums[i]-nums[j]) == k:
                    count+=1
                j+=1
            i+=1
    
        return count
        
# Solution 2
class Solution:
    def countKDifference(self, nums: List[int], k: int) -> int:
        seen = defaultdict(int)
        counter = 0
        for num in nums:
            counter += seen[num-k] + seen[num+k]
            seen[num] += 1
        return counter
